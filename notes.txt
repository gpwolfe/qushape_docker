from chat gpt:
Install XQuartz:

    Visit the XQuartz website (https://www.xquartz.org/) and download the latest version of XQuartz.
    Install XQuartz by following the installation instructions provided.

Launch XQuartz:

    Open a Terminal window and run the following command:

    bash

    open -a XQuartz

In the XQuartz preferences, go to the "Security" tab and ensure that the options "Allow connections from network clients" and "Authenticate connections" are enabled.

Restart XQuartz to apply the changes.

Run the Docker container with the following command:

bash

docker run --rm -it \
    --env="DISPLAY=docker.for.mac.host.internal:0" \
    --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" \
    gui-container

The DISPLAY environment variable is set to docker.for.mac.host.internal:0, which allows the container to connect to the XQuartz server on macOS. The --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" flag binds mounts the X11 Unix socket.

Inside the container, you should now be able to run GUI applications. Test it by running a simple GUI application like xeyes:

bash

xeyes

COMMANDS I'VE TRIED
xhost +local:docker

docker run --rm -it     --env="DISPLAY=$DISPLAY"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" qu
docker run --rm -it     --env="DISPLAY=$DISPLAY"     --env="XAUTHORITY=/tmp/.docker.xauth"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw"     --volume="/tmp/.docker.xauth:/tmp/.docker.xauth:rw"     --network=docker_network qu
docker run --rm -it     --env="DISPLAY=$DISPLAY"     --env="XAUTHORITY=/tmp/.docker.xauth"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw"     --volume="/tmp/.docker.xauth:/tmp/.docker.xauth:rw"     --network=docker_network --ipc="host" qu
docker run --ipc=host -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --user="$(id --user):$(id --group)" qu
docker run --rm -it --ipc=host -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --user="$(id --user):$(id --group)" qu
docker run --rm -it --ipc=host -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --user="docker:docker" qu
docker run --rm -it --ipc=host -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --user=docker:docker qu
docker run --rm -it --ipc=host -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --user=gpwolfe:gpwolfe qu
docker run --ipc=host -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --user="$(id --user):$(id --group)"
docker run --rm -it --ipc=host -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix  qu
sudo docker run --rm -it --ipc=host -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix  qu

This creates a working QuShape setup, now to remove extraneous:
sudo docker run --rm -it     --env="DISPLAY=$DISPLAY"     --env="XAUTHORITY=/tmp/.docker.xauth"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw"     --volume="/tmp/.docker.xauth:/tmp/.docker.xauth:rw"     --network=docker_network --ipc="host" qu
